import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1"
}

group = 'com.tech-thrive-catalyst'
version = '0.0.1-SNAPSHOT'
description = 'Spring Boot Kafka Consumer'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
    maven { url = uri("https://packages.confluent.io/maven/") } // for Confluent libs
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.networknt:json-schema-validator:1.0.83'
    implementation 'org.apache.avro:avro:1.12.0'
    implementation("io.confluent:kafka-avro-serializer:7.9.2")
    implementation 'io.confluent:kafka-schema-registry-client:7.9.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:kafka'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    stringType = "String"
    fieldVisibility = "PRIVATE"
    source 'src/main/resources/kafka/schema/avro'
    outputDir file('src/main/java/')
}

sourceSets {
    getByName("main") {
        java.srcDir("$buildDir/generated")
    }
}

tasks.named("compileJava").configure {
    source(generateAvro)
}